{"version":3,"sources":["webpack:///./src/components/dataRange.tsx","webpack:///./src/components/educationCard.tsx","webpack:///./src/pages/educations.tsx"],"names":["DataRange","startDate","endDate","textColor","useColorModeValue","fontSize","pb","color","EducationCard","title","institute","description","props","borderBottomWidth","borderBottomColor","py","fontWeight","IndexPage","data","educations","edges","map","node","key","id","childMarkdownRemark","frontmatter","excerpt"],"mappings":"2FAAA,mFAOaA,EAAY,SAAC,GAGS,IAFjCC,EAEiC,EAFjCA,UACAC,EACiC,EADjCA,QAEMC,EAAYC,YAAkB,WAAY,YAEhD,OACE,kBAAC,IAAD,CAAMC,SAAS,KAAKC,GAAI,EAAGC,MAAOJ,GACjB,iBAAdF,GAAgCA,EADnC,KACgD,IAChC,iBAAZC,GAA8BA,GAAY,a,kOCHrCM,EAAgB,SAAC,GAAD,IAC3BC,EAD2B,EAC3BA,MACAC,EAF2B,EAE3BA,UACAC,EAH2B,EAG3BA,YACAV,EAJ2B,EAI3BA,UACAC,EAL2B,EAK3BA,QACGU,EANwB,wBAQ3B,kBAAC,IAAD,eACEC,kBAAkB,MAClBC,kBAAmBV,YAAkB,WAAY,YACjDW,GAAI,GACAH,GAEJ,kBAAC,IAAD,CAAMP,SAAS,KAAKE,MAAM,WAAWS,WAAW,QAC7CP,GAEH,kBAAC,IAAD,CACEJ,SAAS,KACTE,MAAOH,YAAkB,WAAY,YACrCY,WAAW,SACXV,GAAI,GAEHI,GAEH,kBAAC,IAAD,CAAML,SAAS,KAAKE,MAAOH,YAAkB,WAAY,aACtDO,GAEH,kBAAC,IAAD,CAAWV,UAAWA,EAAWC,QAASA,M,YClC/B,SAASe,EAAT,GAA+C,IAA1BC,EAA0B,EAA1BA,KAClC,OACE,kBAAC,IAAD,KACGA,EAAKC,WAAWC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACzB,kBAAC,EAAD,CACEC,IAAKD,EAAKE,GACVf,MAAOa,EAAKG,oBAAoBC,YAAYjB,MAC5CC,UAAWY,EAAKG,oBAAoBC,YAAYhB,UAChDT,UAAWqB,EAAKG,oBAAoBC,YAAYzB,UAChDC,QAASoB,EAAKG,oBAAoBC,YAAYxB,QAC9CS,YAAaW,EAAKG,oBAAoBE","file":"component---src-pages-educations-tsx-6f48ef14bf08a6b5f6d8.js","sourcesContent":["import { Text, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface DataRangeProps {\n  startDate: string;\n  endDate: string;\n}\nexport const DataRange = ({\n  startDate,\n  endDate,\n}: DataRangeProps): JSX.Element => {\n  const textColor = useColorModeValue('gray.600', 'gray.500');\n\n  return (\n    <Text fontSize=\"xs\" pb={1} color={textColor}>\n      {startDate !== 'Invalid date' && startDate} -{' '}\n      {(endDate !== 'Invalid date' && endDate) || 'Present'}\n    </Text>\n  );\n};\n","import { Box, BoxProps, Text, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport { DataRange } from './dataRange';\n\ninterface EducationCardProps extends BoxProps {\n  title: string;\n  institute: string;\n  description: string;\n  startDate: string;\n  endDate: string;\n}\n\nexport const EducationCard = ({\n  title,\n  institute,\n  description,\n  startDate,\n  endDate,\n  ...props\n}: EducationCardProps): JSX.Element => (\n  <Box\n    borderBottomWidth=\"1px\"\n    borderBottomColor={useColorModeValue('gray.200', 'gray.700')}\n    py={4}\n    {...props}\n  >\n    <Text fontSize=\"xl\" color=\"blue.500\" fontWeight=\"bold\">\n      {title}\n    </Text>\n    <Text\n      fontSize=\"md\"\n      color={useColorModeValue('gray.500', 'gray.300')}\n      fontWeight=\"bolder\"\n      pb={2}\n    >\n      {institute}\n    </Text>\n    <Text fontSize=\"xs\" color={useColorModeValue('gray.600', 'gray.400')}>\n      {description}\n    </Text>\n    <DataRange startDate={startDate} endDate={endDate} />\n  </Box>\n);\n","import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport { EducationCard } from '../components/educationCard';\nimport { Layout } from '../components/layout';\n\n// eslint-disable-next-line import/no-default-export\nexport default function IndexPage({ data }: any): JSX.Element {\n  return (\n    <Layout>\n      {data.educations.edges.map(({ node }: any) => (\n        <EducationCard\n          key={node.id}\n          title={node.childMarkdownRemark.frontmatter.title}\n          institute={node.childMarkdownRemark.frontmatter.institute}\n          startDate={node.childMarkdownRemark.frontmatter.startDate}\n          endDate={node.childMarkdownRemark.frontmatter.endDate}\n          description={node.childMarkdownRemark.excerpt}\n        />\n      ))}\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query {\n    educations: allFile(\n      filter: {\n        internal: { mediaType: { eq: \"text/markdown\" } }\n        sourceInstanceName: { eq: \"educations\" }\n      }\n      sort: {\n        fields: childMarkdownRemark___frontmatter___startDate\n        order: DESC\n      }\n    ) {\n      edges {\n        node {\n          childMarkdownRemark {\n            id\n            frontmatter {\n              title\n              institute\n              startDate(formatString: \"DD MMMM, YYYY\")\n              endDate(formatString: \"DD MMMM, YYYY\")\n            }\n            excerpt\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}